sort by排序：分为内存排序（快速排序）和磁盘排序（内存不够，归并排序）

相关参数：
sort_buffer_size：
每次用于排序的buffer大小，会话级别，默认256K，官方建议小于2M

read_rnd_buffer_size：
除了MRR用到，这里也用到了用于 二次排序的时候对排序好的数据按照primary key(ROW_ID)按照分块的方式再次排序，意义同样在回表取数据可以尽量顺序化

max_length_for_sort_data：
单位为字节(bytes)，如果排序返回行的字段长度综合大约这个值，使用二次排序而不是一次排序，默认1024，最小值为4

max_sort_length：
单位为字节(bytes)，如果排序字段的长度超过这个值，只是用这个参数设置的长度，默认1024

监控参数：
Sort_merge_passes：
磁盘排序归并次数

相关概念：
二次访问排序：
1.读取数据只包含排序键值和rowid(primary key)放到sort buffer
2.在buffer中进行快速排序，如果buffer 满则把内存中的排序数据写入tempfile
3.重复上面的过程直到内部快速排序完成，并且生成多个tmepfile文件
4.最后一次归并的时候，只有rowid(priamry key)到最后的文件中
5.对最后的文件根据rowid(primary key)访问表数据，这样就可以得到排序好的数据

问题在于对表数据的二次访问，一次在读取数据的时候，后一次在通过排序好的
rowid(primary key)进行数据的访问，并且会出现大量随机访问

一次访问排序：
需要的数据字段全部放到sort buffer

劣势就是更大的sort buffer占用，更大tempfile占用