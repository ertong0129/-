jstat：用于监控java程序的状态信息，可以查看堆内存各部分的使用量，以及加载类的数量
使用方式：
jstat [-命令选项] [vmid] [间隔时间/毫秒] [查询次数]

1.类加载统计
jstat -class pid
结果说明：
Loaded:加载class的数量
Bytes：所占用空间大小
Unloaded：未加载数量
Bytes:未加载占用空间
Time：时间

2.编译统计
jstat -compiler pid
结果说明：
Compiled：编译数量。
Failed：失败数量
Invalid：不可用数量
Time：时间
FailedType：失败类型
FailedMethod：失败的方法

3.垃圾回收统计
jstat -gc pid
结果说明
S0C：第一个Survivor的大小
S1C：第二个Survivor的大小
S0U：第一个Survivor的使用大小
S1U：第二个Survivor的使用大小
EC：Eden的大小
EU：Eden的使用大小
OC：老年代大小
OU：老年代使用大小
MC：方法区大小
MU：方法区使用大小
CCSC:压缩类空间大小
CCSU:压缩类空间使用大小
YGC：年轻代垃圾回收次数
YGCT：年轻代垃圾回收消耗时间
FGC：老年代垃圾回收次数
FGCT：老年代垃圾回收消耗时间
GCT：垃圾回收消耗总时间

4.堆内存统计
jstat -gccapacity
结果说明：
NGCMN：新生代最小容量
NGCMX：新生代最大容量
NGC：当前新生代容量
S0C：第一个Survivor大小
S1C：第二个Survivor的大小
EC：Eden的大小
OGCMN：老年代最小容量
OGCMX：老年代最大容量
OGC：当前老年代大小
OC：当前老年代大小
MCMN：最小元数据容量
MCMX：最大元数据容量
MC：当前元数据空间大小
CCSMN：最小压缩类空间大小
CCSMX：最大压缩类空间大小
CCSC：当前压缩类空间大小
YGC：年轻代gc次数
FGC：老年代GC次数

5.新生代垃圾回收统计
jstat -gcnew pid

6.新生代内存统计
jstat -gcnewcapacity

7.老年代垃圾回收统计
jstat -gcold pod

8.老年代内存统计
jstat -gcoldcapacity pid

9.jdk7->永久代空间统计
jstat -gcpermcapacity pid

10.JDK8->元数据空间统计
jstat -gcmetacapacity pid

11.总结垃圾回收统计
jstat -gcutil pid

12.JVM编译方法统计
jstat -printcompilation pid
结果说明：
Compiled：最近编译方法的数量
Size：最近编译方法的字节码数量
Type：最近编译方法的编译类型。
Method：方法名标识。