rdb：redis用来进行持久化的一种方式，是把当前内存中的数据集快照写入磁盘，也就是 Snapshot 快照（数据库中所有键值对数据）。恢复时是将快照文件直接读到内存里。

触发方式：
rdb有两种触发方式，分别是自动触发和手动触发。
1.自动触发
redis.conf配置文件中的SNPSHOTTING下，指定rdb自动触发方式
save m n：表示m秒内数据集存在n次修改时，自动触发bgsave
默认值：
save 900 1（900s内有1次改动，就备份）
save 300 10（300s内有10次改动，就备份）
save 60 10000（60s内有1w次改动，就备份）
如果只用redis的缓存功能，不需要持久化，可以注释掉所有的 save 行来停用保存功能，直接一个空字符串来实现停用：save ""

2.手动触发
save：该命令会阻塞当前redis服务器，执行save命令期间，redis不能处理其他命令，直到rdb过程完成为止
bgsave：执行该命令时，redis会在后台异步进行快照操作，快照同时还可以响应客户端请求。具体操作是redis进程执行fork操作创建子进程（这个过程会占用额外的内存），rdb持久化过程由子进程负责，完成后自动结束。阻塞只发生在fork阶段，一般时间很短

恢复数据：
将备份文件 (dump.rdb) 移动到 redis 安装目录并启动服务即可，redis就会自动加载文件数据至内存了。redis 服务器在载入rdb文件期间，会一直处于阻塞状态，直到载入工作完成为止。


redis.conf其他参数说明：
stop-writes-on-bgsave-error：默认值为yes。当启用了rdb且最后一次后台保存数据失败，redis是否停止接收数据。这会让用户意识到数据没有正确持久化到磁盘上，否则没有人会注意到灾难（disaster）发生了。如果redis重启了，那么又可以重新开始接收数据了
rdbcompression：默认值是yes。对于存储到磁盘中的快照，可以设置是否进行压缩存储。如果是的话，redis会采用LZF算法进行压缩。如果你不想消耗CPU来进行压缩的话，可以设置为关闭此功能，但是存储在磁盘上的快照会比较大
rdbchecksum：默认值是yes。在存储快照后，我们还可以让redis使用CRC64算法来进行数据校验，但是这样做会增加大约10%的性能消耗，如果希望获取到最大的性能提升，可以关闭此功能。
dbfilename：设置快照的文件名，默认是 dump.rdb
dir：设置快照文件的存放路径，这个配置项一定是个目录，而不能是文件名。默认是和当前配置文件保存在同一目录。