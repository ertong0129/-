aof：将redis执行的每次写命令记录到单独的日志文件中（有点像mysql的binlog）；当redis重启时再次执行aof文件中的命令来恢复数据
文件重写是指定期重写aof文件，减小aof文件的体积。重写是把redis进程内的数据转化为写命令，同步到新的aof文件；不会对旧的aof文件进行任何读取、写入操作

参数说明：
appendonly：yes
redis服务器默认开启rdb，关闭aof；要开启aof，需要在配置文件redis.conf中配置

appendfsync：持久化策略，有三个选项值
always：每次有新命令时，就将缓冲区数写入并同步到aof文件
everysec：每秒将缓冲区数据写入并同步到aof文件
no：将缓冲区数据写入aof文件，但是同步的时机到交给操作系统来处理

appendfilename ：
aof文件名

auto-aof-rewrite-percentage：100 
当前aof文件比上次重写的增长比例大小，超过这个比例之后，对aof文件进行重写

auto-aof-rewrite-min-size：64mb
文件的最小体积

no-appendfsync-on-rewrite：no
重写AOF时，是否继续写AOF文件

aof-load-truncated：yes
是否忽略最后一条可能存在问题的指令

触发方式
1.自动触发
根据auto-aof-rewrite-min-size和auto-aof-rewrite-percentage参数，以及aof_current_size和aof_base_size状态确定触发时机

2.手动触发
bgrewriteaof：fork子进程进行具体的工作，且都只有在fork时阻塞

重写步骤：
1.创建子进程进行aof重写
2.将客户端的写命令追加到aof重写缓冲区
3.子进程完成aof重写工作后，会向父进程发送一个信号
4.父进程接收到信号后，将aof重写缓冲区的所有内容写入到新aof文件中
5.对新的aof文件进行改名，原子的覆盖现有的aof文件

rdb和aof都是在启动时加载的，aof开启时，会优先从aof文件从恢复数据 ，aof关闭时才会从rdb文件恢复数据